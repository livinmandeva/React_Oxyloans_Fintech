{"version":3,"file":"static/js/5690.2f8e509e.chunk.js","mappings":"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","sources":["components/HttpRequest/beforelogin.js","components/pages/Authentication/ForgotPassword3.jsx","components/pages/Authentication/api.js"],"sourcesContent":["import axios from \"axios\";\r\nconst userisIn = \"prod\";\r\nlet API_BASE_URL =\r\n  userisIn == \"local\"\r\n    ? \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/\"\r\n    : \"https://fintech.oxyloans.com/oxyloans/v1/user/\";\r\n\r\nconst handleApiRequestBeforeLogin = async (\r\n  method,\r\n  BASE_URL,\r\n  End_Url,\r\n  POSTDATA\r\n) => {\r\n  try {\r\n    const response = await axios({\r\n      method,\r\n      url: `${BASE_URL}${End_Url}`,\r\n      data: POSTDATA,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.status == 200) {\r\n      return response;\r\n    }\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  const data = {\r\n    email: email,\r\n  };\r\n\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"resetpassword\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const userloginSection = async (email, password) => {\r\n  const checkLoginMode = email.includes(\"@\") == true ? true : false;\r\n  const postdata =\r\n    checkLoginMode === true\r\n      ? JSON.stringify({ password: password, email: email })\r\n      : JSON.stringify({\r\n          password: password,\r\n          mobileNumber: email,\r\n        });\r\n\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"login?grantType=PWD\",\r\n    postdata\r\n  );\r\n\r\n  if (response.status == 200) {\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    sessionStorage.setItem(\"accessToken\", accessTokenFromHeader);\r\n    sessionStorage.setItem(\"userId\", response.data.id);\r\n    sessionStorage.setItem(\"tokenTime\", response.data.tokenGeneratedTime);\r\n    return response;\r\n  } else {\r\n    return response;\r\n  }\r\n};\r\nexport const sendwhatappotp = async (value1) => {\r\n  const value = value1.replace(\"+\", \"\");\r\n  const data = {\r\n    whatsappNumber: value,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\nexport const verifywhatappotp = async (api) => {\r\n  console.log(api);\r\n  const value1 = localStorage.getItem(\"otp\");\r\n  const otp = value1.replace(/,/g, \"\");\r\n  const data = {\r\n    whatsappNumber: api.whatsappNumber,\r\n    session: api.session,\r\n    otp: otp,\r\n    id: api.id,\r\n    otpGeneratedTime: api.otpGeneratedTime,\r\n  };\r\n  const response = await handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    \"whatsapp-login-otp-verification\",\r\n    data\r\n  );\r\n  return response;\r\n};\r\n\r\n// export const handleip4 = () => {\r\n//   return handleApiRequestBeforeLogin(\r\n//     \"get\",\r\n//     \"https://api.ipify.org/?format=json\"\r\n//   );\r\n// };\r\n\r\n// export const handleipv6 = () => {\r\n//   return handleApiRequestBeforeLogin(\"get\", \"https://ipapi.co/json/\");\r\n// };\r\n\r\nexport const passwordupdated = async (\r\n  email,\r\n  emailToken,\r\n  password,\r\n  confirmPassword\r\n) => {\r\n  const data = {\r\n    password: password,\r\n    confirmPassword: confirmPassword,\r\n  };\r\n  const response = handleApiRequestBeforeLogin(\r\n    \"POST\",\r\n    API_BASE_URL,\r\n    `resetpassword/${emailToken}`,\r\n    data\r\n  );\r\n\r\n  return response;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { login } from \"../../imagepath\";\r\nimport * as api from \"./api\";\r\nimport { sendotpemail } from \"../../HttpRequest/beforelogin\";\r\n\r\nconst ForgotPassword3 = () => {\r\n  const [email, setemail] = useState({\r\n    emailid: \"\",\r\n    error: \"\",\r\n    data: {},\r\n  });\r\n\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target;\r\n    setemail({\r\n      ...email,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleresetpassword = async () => {\r\n    const vaildatebu = api.vaildateemail(email.emailid);\r\n    if (vaildatebu) {\r\n      setemail({\r\n        ...email,\r\n        error: vaildatebu,\r\n      });\r\n      return;\r\n    }\r\n    try {\r\n      const sendOtpEmail = sendotpemail(email.emailid);\r\n      setemailisvaild(!emailisvaild);\r\n      setEmail({\r\n        ...email,\r\n        data: sendOtpEmail,\r\n      });\r\n    } catch (error) {\r\n      setEmail({\r\n        ...email,\r\n        error: error,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img className=\"img-fluid\" src={login} alt=\"Logo\" />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  <h1>Reset Password</h1>\r\n                  <p className=\"account-subtitle\">Let Us Help You</p>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label>\r\n                      Enter your registered email address\r\n                      <span className=\"login-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"emailid\"\r\n                      onChange={handlechange}\r\n                    />\r\n                    <span className=\"profile-views\">\r\n                      <i className=\"fas fa-envelope\" />\r\n                    </span>\r\n                  </div>\r\n                  {email.error && (\r\n                    <div className=\"errormessage\">{email.error}</div>\r\n                  )}\r\n                  <div className=\"form-group\">\r\n                    <button\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"submit\"\r\n                      onClick={handleresetpassword}\r\n                    >\r\n                      Reset My Password\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"form-group mb-0\">\r\n                    {/* <button\r\n                      className=\"btn btn-primary primary-reset btn-block\"\r\n                      type=\"submit\"\r\n                      onClick=\"./admindashboard\"\r\n                    >\r\n                      Login\r\n                    </button> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword3;\r\n","import axios from \"axios\";\r\nimport { data } from \"jquery\";\r\n\r\nconst API_BASE_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/\";\r\nconst API_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\";\r\nconst API_URL_otp =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/sendOtp\";\r\n// Function to perform the login API request\r\nexport const loginUser = async (email, password, dataIpv4, dataIpv6) => {\r\n  var data = {\r\n    password: password,\r\n    email: email,\r\n    ipAddress: dataIpv4,\r\n    ipAddressResponse: dataIpv6,\r\n    loginType: \"WEB\",\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    localStorage.setItem(\"token\", accessTokenFromHeader);\r\n\r\n    if (!accessTokenFromHeader) {\r\n      throw new Error(\"Access token not found in response headers\");\r\n    }\r\n\r\n    return {\r\n      accessToken: accessTokenFromHeader,\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateInput = (email, password) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  var data = {\r\n    email: email,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/resetpassword\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifypannumber = async (pannumber, address, time, id, date) => {\r\n  var data = {\r\n    address: address,\r\n    dob: date,\r\n    panNumber: pannumber,\r\n    timeInMilliSeconds: time,\r\n    userId: id,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/emailVerification\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const vaildateemail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n  return null;\r\n};\r\nexport const validateRegisterInput = (email, password, moblie) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  }\r\n\r\n  return null; // No validation error\r\n};\r\n\r\nexport const validatemoblie = (moblie) => {\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const moblieloginotp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL_otp, data);\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateotpsubmit = async (moblie, otp) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n    mobileOtpValue: otp,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://ec2-13-127-118-128.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const RegisterUser = async (moblie) => {\r\n  var data = {\r\n    citizenship: \"NONNRI\",\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/newUserRegistration\",\r\n      data\r\n    );\r\n    return response.data.mobileOtpSession;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n// a\r\n\r\nexport const vaildateotp = async (\r\n  email,\r\n  moblie,\r\n  otp_data,\r\n  name,\r\n  password,\r\n  session,\r\n  referrerId\r\n) => {\r\n  if (referrerId === \"\") {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      uuid: \"asdfghjkl\",\r\n    };\r\n  } else {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      uuid: \"asdfghjkl\",\r\n    };\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/newUserRegistration\",\r\n      data\r\n    );\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"names":["API_BASE_URL","handleApiRequestBeforeLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","method","BASE_URL","End_Url","POSTDATA","response","wrap","_context","prev","next","axios","url","concat","data","headers","sent","status","abrupt","t0","stop","_x","_x2","_x3","_x4","apply","arguments","sendotpemail","_ref2","_callee2","email","_context2","_x5","userloginSection","_ref3","_callee3","password","checkLoginMode","postdata","accessTokenFromHeader","_context3","includes","JSON","stringify","mobileNumber","sessionStorage","setItem","id","tokenGeneratedTime","_x6","_x7","sendwhatappotp","_ref4","_callee4","value1","value","_context4","replace","whatsappNumber","_x8","verifywhatappotp","_ref5","_callee5","api","otp","_context5","console","log","localStorage","getItem","session","otpGeneratedTime","_x9","passwordupdated","_ref6","_callee6","emailToken","confirmPassword","_context6","_x10","_x11","_x12","_x13","_useState","useState","emailid","error","_useState2","_slicedToArray","setemail","handleresetpassword","vaildatebu","sendOtpEmail","_objectSpread","setemailisvaild","emailisvaild","setEmail","_jsx","_Fragment","children","className","_jsxs","src","login","alt","type","name","onChange","event","_event$target","target","_defineProperty","onClick","verifypannumber","pannumber","address","time","date","dob","panNumber","timeInMilliSeconds","userId","responseData","vaildateemail","match","validateRegisterInput","moblie","length","RegisterUser","citizenship","mobileOtpSession","_x14","vaildateotp","_ref7","_callee7","otp_data","referrerId","_context7","mobileOtpValue","primaryType","uniqueNumber","utm","uuid","_x15","_x16","_x17","_x18","_x19","_x20","_x21"],"sourceRoot":""}