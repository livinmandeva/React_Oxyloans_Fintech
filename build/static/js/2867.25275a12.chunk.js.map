{"version":3,"file":"static/js/2867.25275a12.chunk.js","mappings":"8NA8JA,UAzJuB,WACrB,IAAAA,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,QAAS,GACTC,MAAO,GACPC,KAAM,CAAC,EACPC,YAAY,EACZC,WAAY,GACZC,MAAO,GACPC,SAAU,GACVC,cAAe,GACfC,gBAAiB,KACjBC,GAAAC,EAAAA,EAAAA,GAAAZ,EAAA,GAVKO,EAAKI,EAAA,GAAEE,EAAQF,EAAA,GAWtBG,GAAwCb,EAAAA,EAAAA,WAAS,GAAKc,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA/CE,EAAYD,EAAA,GACbE,GAD8BF,EAAA,GACf,SAACG,GACpB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdT,GAAQU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLhB,GAAK,IAAAiB,EAAAA,EAAAA,GAAA,GACPH,EAAOC,IAEZ,IAEAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,gBAAgBC,OAAOC,SAASC,QAC/CvB,EAAQmB,EAASK,IAAI,SAC3BC,QAAQC,IAAI1B,GACZ,IAAMD,EAAaoB,EAASK,IAAI,cAChCC,QAAQC,IAAI3B,GAEZO,GAAQU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLhB,GAAK,IACRA,MAAOA,EACPD,WAAYA,IAEhB,GAAG,CAACU,IAEJ,IAAMkB,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACjBrC,EAAMC,WAAaD,EAAMG,gBAAe,CAAAgC,EAAAE,KAAA,QAC1C/B,GAAQU,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLhB,GAAK,IACRE,cAAe,oDACdiC,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAGsBC,EAAAA,EAAAA,IACrBtC,EAAMD,WACNC,EAAMA,MACNA,EAAMC,SACND,EAAMG,iBACN,KAAD,EALK8B,EAAQE,EAAAI,KAOdd,QAAQC,IAAIO,GAAUE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAEtBV,QAAQ7B,MAAKuC,EAAAK,IAAQ,yBAAAL,EAAAM,OAAA,GAAAT,EAAA,mBAG1B,kBApBmB,OAAAJ,EAAAc,MAAA,KAAAC,UAAA,KAsBpB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,0BAAyBD,UACtCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,UACxBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,WAAUD,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBF,EAAAA,EAAAA,KAAA,OACEG,UAAU,mBACVE,IAAKC,EAAAA,GACLC,IAAI,YAGRP,EAAAA,EAAAA,KAAA,OAAKG,UAAU,cAAaD,UAC1BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAI/BE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,CACG,KACDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,mBAAkBD,SAAC,qBAGhCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,kBACSF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE/CF,EAAAA,EAAAA,KAAA,SACEG,UAAU,eACVK,KAAK,OACLtC,KAAK,UACLC,MAAOf,EAAMA,SAEf4C,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeD,UAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,0BAGjBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,aACIF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE1CF,EAAAA,EAAAA,KAAA,SACEG,UAAU,eACVK,KAAK,OACLtC,KAAK,UACLuC,SAAU3C,KAEZkC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeD,UAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,0BAGjBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,aAAYD,SAAA,EACzBE,EAAAA,EAAAA,MAAA,SAAAF,SAAA,CAAO,qBACYF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAElDF,EAAAA,EAAAA,KAAA,SACEG,UAAU,eACVK,KAAK,OACLtC,KAAK,UACLuC,SAAU3C,KAEZkC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeD,UAC7BF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,yBAGhB/C,EAAMJ,QACLgD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,SAAE9C,EAAMJ,QAEtCI,EAAME,gBACL0C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,eAAcD,SAAE9C,EAAME,iBAEvC0C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYD,UACzBF,EAAAA,EAAAA,KAAA,UACEG,UAAU,4BACVK,KAAK,SACLE,QAAS3B,EAAemB,SACzB,yCAgBvB,C,6LCzJMS,G,SACJ,gFAuEWC,EAAe,eAAAC,GAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA2B,EAAOC,EAAWC,EAASC,EAAMC,EAAIC,GAAI,IAAAlE,EAAAoC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OAOrE,OANGxC,EAAO,CACT+D,QAASA,EACTK,IAAKF,EACLG,UAAWP,EACXQ,mBAAoBN,EACpBO,OAAQN,GACTE,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEwBgC,EAAAA,EAAAA,KACrBd,EAAe,yBACf1D,EACA,CACEyE,QAAS,CACP,eAAgB,sBAGpB,KAAD,EARa,OAARrC,EAAQ+B,EAAAzB,KAAAyB,EAAAO,OAAA,SAUP,CACLC,aAAcvC,EAASpC,OACxB,aAAAmE,EAAA5B,KAAA,EAAA4B,EAAAxB,GAAAwB,EAAA,SAAAA,EAAAxB,GAAC,KAAD,oBAAAwB,EAAAvB,OAAA,GAAAiB,EAAA,kBAIJ,gBAzB2Be,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAApB,EAAAf,MAAA,KAAAC,UAAA,KA2BfmC,EAAgB,SAAC9E,GAE5B,OAAKA,GAAUA,EAAM+E,MADF,8BAIZ,KAFE,oCAGX,EACaC,EAAwB,SAAChF,EAAOC,EAAUgF,GAErD,IAAKjF,IAAUA,EAAM+E,MADF,8BAEjB,MAAO,qCAGT,IAAK9E,GAAYA,EAASiF,OAAS,EACjC,MAAO,8CAIT,OAAKD,GAAWA,EAAOF,MADE,YAKlB,KAHE,4CAIX,EAiDaI,EAAY,eAAAC,GAAAvD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsD,EAAOJ,GAAM,IAAApF,EAAAoC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,OAItC,OAHGxC,EAAO,CACT0F,YAAa,SACbC,aAAcP,GACfK,EAAAlD,KAAA,EAAAkD,EAAAjD,KAAA,EAEwBgC,EAAAA,EAAAA,KACrBd,EAAe,2BACf1D,GACA,KAAD,EAHa,OAARoC,EAAQqD,EAAA/C,KAAA+C,EAAAf,OAAA,SAIPtC,EAASpC,KAAK4F,kBAAgB,aAAAH,EAAAlD,KAAA,EAAAkD,EAAA9C,GAAA8C,EAAA,SAAAA,EAAA9C,GAAC,KAAD,oBAAA8C,EAAA7C,OAAA,GAAA4C,EAAA,kBAIxC,gBAdwBK,GAAA,OAAAN,EAAA1C,MAAA,KAAAC,UAAA,KAiBZgD,EAAW,eAAAC,GAAA/D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8D,EACzB7F,EACAiF,EACAa,EACAhF,EACAb,EACA8F,EACAC,GAAU,IAAAnG,EAAAoC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,OA8BT,OA3BKxC,EAAO,CACT2F,aAAcP,EACdQ,iBAAkBM,EAClBG,eAAgBJ,EAChBK,YAAa,SACbrF,KAAMA,EACNd,MAAOA,EACPC,SAAUA,EACVsF,YAAa,SACba,aAAc,EACdC,IAAK,MACLC,KAAM,aAgBTL,EAAA7D,KAAA,EAAA6D,EAAA5D,KAAA,EAGwBgC,EAAAA,EAAAA,KACrBd,EAAe,2BACf1D,GACA,KAAD,EAHa,OAARoC,EAAQgE,EAAA1D,KAAA0D,EAAA1B,OAAA,SAIP,CACLC,aAAcvC,EAASpC,OACxB,aAAAoG,EAAA7D,KAAA,EAAA6D,EAAAzD,GAAAyD,EAAA,SAAAA,EAAAzD,GAAC,KAAD,oBAAAyD,EAAAxD,OAAA,GAAAoD,EAAA,kBAIJ,gBAlDuBU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAjB,EAAAlD,MAAA,KAAAC,UAAA,I","sources":["components/pages/Authentication/ForgotPassword.jsx","components/pages/Authentication/api.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { login, registerImage } from \"../../imagepath\";\r\nimport * as api from \"./api\";\r\nimport { passwordupdated } from \"../../HttpRequest/beforelogin\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setemail] = useState({\r\n    emailid: \"\",\r\n    error: \"\",\r\n    data: {},\r\n    emailvaild: false,\r\n    emailToken: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passworderror: \"\",\r\n    confirmpassword: \"\",\r\n  });\r\n  const [emailisvaild, setemailisvaild] = useState(true);\r\n  const handlechange = (event) => {\r\n    const { name, value } = event.target; // Correct the typo: event.target instead of event.traget\r\n    setemail({\r\n      ...email,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const urlemail = new URLSearchParams(window.location.search);\r\n    const email = urlemail.get(\"email\");\r\n    console.log(email);\r\n    const emailToken = urlemail.get(\"emailToken\");\r\n    console.log(emailToken);\r\n\r\n    setemail({\r\n      ...email,\r\n      email: email,\r\n      emailToken: emailToken,\r\n    });\r\n  }, [emailisvaild]);\r\n\r\n  const handlepassword = async () => {\r\n    if (email.password !== email.confirmpassword) {\r\n      setemail({\r\n        ...email,\r\n        passworderror: \"password and confirm password must be the same\",\r\n      });\r\n    } else {\r\n      try {\r\n        const response = await passwordupdated(\r\n          email.emailToken,\r\n          email.email,\r\n          email.password,\r\n          email.confirmpassword\r\n        );\r\n\r\n        console.log(response);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Main Wrapper */}\r\n      <div className=\"main-wrapper login-body\">\r\n        <div className=\"login-wrapper\">\r\n          <div className=\"container\">\r\n            <div className=\"loginbox\">\r\n              <div className=\"login-left\">\r\n                <img\r\n                  className=\"img-fluid  h-100\"\r\n                  src={registerImage}\r\n                  alt=\"Logo\"\r\n                />\r\n              </div>\r\n              <div className=\"login-right\">\r\n                <div className=\"login-right-wrap\">\r\n                  {/* Form */}\r\n                  {/* <form action=\"./login\"> */}\r\n\r\n                  <div>\r\n                    {\" \"}\r\n                    <h1>Reset Password</h1>\r\n                    <p className=\"account-subtitle\">Let Us Help You</p>\r\n                    {/* Form */}\r\n                    {/* <form action=\"./login\"> */}\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        email address <span className=\"login-danger\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"emailid\"\r\n                        value={email.email}\r\n                      />\r\n                      <span className=\"profile-views\">\r\n                        <i className=\"fas fa-envelope\" />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        password <span className=\"login-danger\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"emailid\"\r\n                        onChange={handlechange}\r\n                      />\r\n                      <span className=\"profile-views\">\r\n                        <i className=\"fas fa-envelope\" />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>\r\n                        confirm password <span className=\"login-danger\">*</span>\r\n                      </label>\r\n                      <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"emailid\"\r\n                        onChange={handlechange}\r\n                      />\r\n                      <span className=\"profile-views\">\r\n                        <i className=\"fas fa-envelope\" />\r\n                      </span>\r\n                    </div>\r\n                    {email.error && (\r\n                      <div className=\"errormessage\">{email.error}</div>\r\n                    )}\r\n                    {email.passworderror && (\r\n                      <div className=\"errormessage\">{email.passworderror}</div>\r\n                    )}\r\n                    <div className=\"form-group\">\r\n                      <button\r\n                        className=\"btn btn-primary btn-block\"\r\n                        type=\"submit\"\r\n                        onClick={handlepassword}\r\n                      >\r\n                        Reset My Password\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* </form> */}\r\n                  {/* /Form */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\r\nimport { data } from \"jquery\";\r\n\r\nconst API_BASE_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/\";\r\nconst API_URL =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\";\r\nconst API_URL_otp =\r\n  \"http://ec2-15-207-239-145.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/sendOtp\";\r\n// Function to perform the login API request\r\nexport const loginUser = async (email, password, dataIpv4, dataIpv6) => {\r\n  var data = {\r\n    password: password,\r\n    email: email,\r\n    ipAddress: dataIpv4,\r\n    ipAddressResponse: dataIpv6,\r\n    loginType: \"WEB\",\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL, data, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessTokenFromHeader = response.headers[\"accesstoken\"];\r\n    localStorage.setItem(\"token\", accessTokenFromHeader);\r\n\r\n    if (!accessTokenFromHeader) {\r\n      throw new Error(\"Access token not found in response headers\");\r\n    }\r\n\r\n    return {\r\n      accessToken: accessTokenFromHeader,\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateInput = (email, password) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const sendotpemail = async (email) => {\r\n  var data = {\r\n    email: email,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/resetpassword\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const verifypannumber = async (pannumber, address, time, id, date) => {\r\n  var data = {\r\n    address: address,\r\n    dob: date,\r\n    panNumber: pannumber,\r\n    timeInMilliSeconds: time,\r\n    userId: id,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/emailVerification\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const vaildateemail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n  return null;\r\n};\r\nexport const validateRegisterInput = (email, password, moblie) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!email || !email.match(emailRegex)) {\r\n    return \"Please enter a valid email address\";\r\n  }\r\n\r\n  if (!password || password.length < 6) {\r\n    return \"Password must be at least 6 characters long\";\r\n  }\r\n\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  }\r\n\r\n  return null; // No validation error\r\n};\r\n\r\nexport const validatemoblie = (moblie) => {\r\n  const phoneNumberRegex = /^\\d{10}$/;\r\n  if (!moblie || !moblie.match(phoneNumberRegex)) {\r\n    return \"Please enter a valid 10-digit phone number\";\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const moblieloginotp = async (moblie) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(API_URL_otp, data);\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const validateotpsubmit = async (moblie, otp) => {\r\n  var data = {\r\n    mobileNumber: moblie,\r\n    mobileOtpValue: otp,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://ec2-13-127-118-128.ap-south-1.compute.amazonaws.com:8080/oxyloans/v1/user/login?grantType=PWD\",\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const RegisterUser = async (moblie) => {\r\n  var data = {\r\n    citizenship: \"NONNRI\",\r\n    mobileNumber: moblie,\r\n  };\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/newUserRegistration\",\r\n      data\r\n    );\r\n    return response.data.mobileOtpSession;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n// a\r\n\r\nexport const vaildateotp = async (\r\n  email,\r\n  moblie,\r\n  otp_data,\r\n  name,\r\n  password,\r\n  session,\r\n  referrerId\r\n) => {\r\n  if (referrerId === \"\") {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      uuid: \"asdfghjkl\",\r\n    };\r\n  } else {\r\n    var data = {\r\n      mobileNumber: moblie,\r\n      mobileOtpSession: session,\r\n      mobileOtpValue: otp_data,\r\n      primaryType: \"LENDER\",\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n      citizenship: \"NONNRI\",\r\n      uniqueNumber: 0,\r\n      utm: \"WEB\",\r\n      uuid: \"asdfghjkl\",\r\n    };\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      API_BASE_URL + \"user/newUserRegistration\",\r\n      data\r\n    );\r\n    return {\r\n      responseData: response.data,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n"],"names":["_useState","useState","emailid","error","data","emailvaild","emailToken","email","password","passworderror","confirmpassword","_useState2","_slicedToArray","setemail","_useState3","_useState4","emailisvaild","handlechange","event","_event$target","target","name","value","_objectSpread","_defineProperty","useEffect","urlemail","URLSearchParams","window","location","search","get","console","log","handlepassword","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","passwordupdated","sent","t0","stop","apply","arguments","_jsx","_Fragment","children","className","_jsxs","src","registerImage","alt","type","onChange","onClick","API_BASE_URL","verifypannumber","_ref3","_callee3","pannumber","address","time","id","date","_context3","dob","panNumber","timeInMilliSeconds","userId","axios","headers","abrupt","responseData","_x6","_x7","_x8","_x9","_x10","vaildateemail","match","validateRegisterInput","moblie","length","RegisterUser","_ref6","_callee6","_context6","citizenship","mobileNumber","mobileOtpSession","_x14","vaildateotp","_ref7","_callee7","otp_data","session","referrerId","_context7","mobileOtpValue","primaryType","uniqueNumber","utm","uuid","_x15","_x16","_x17","_x18","_x19","_x20","_x21"],"sourceRoot":""}